@page
@model MiniAccountSystem.Pages.Admin.AssignModuleAccessModel
@{
    ViewData["Title"] = "Assign Module Access";
}

<div class="container mt-4">
    <div class="card border-0 shadow-lg" style="background: linear-gradient(135deg, #2c3e50 0%, #1a1a1a 100%);">
        <div class="card-header bg-dark-gradient text-white py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="mb-0">
                    <i class="fas fa-key me-2"></i> Assign Module Access
                </h2>
                <div class="badge bg-primary-soft">Admin Panel</div>
            </div>
        </div>
        <div class="card-body bg-light-gray">
            <form method="post" class="needs-validation" novalidate>
                <div class="row g-4">
                    <div class="col-md-6">
                        <div class="form-floating">
                            <select asp-for="SelectedRole" class="form-select bg-soft-dark border-dark" id="roleSelect">
                                <option value="">-- Select Role --</option>
                                @foreach (var role in Model.Roles)
                                {
                                    <option value="@role.Value">@role.Text</option>
                                }
                            </select>
                            <label for="roleSelect" class="text-dark">
                                <i class="fas fa-user-tag me-2"></i>Select Role
                            </label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <select asp-for="SelectedModule" class="form-select bg-soft-dark border-dark" id="moduleSelect">
                                <option value="">-- Select Module --</option>
                                @foreach (var module in Model.Modules)
                                {
                                    <option value="@module.Value">@module.Text</option>
                                }
                            </select>
                            <label for="moduleSelect" class="text-dark">
                                <i class="fas fa-puzzle-piece me-2"></i>Select Module
                            </label>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-end mt-4 pt-3 border-top border-secondary">
                    <button type="submit" class="btn btn-success-gradient px-4">
                        <i class="fas fa-check-circle me-2"></i> Assign Access
                    </button>
                </div>
            </form>

            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="alert alert-success-gradient mt-4 alert-dismissible fade show">
                    <i class="fas fa-check-circle me-2"></i> @Model.Message
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Gradient Backgrounds */
        .bg-dark-gradient {
            background: linear-gradient(135deg, #1a1a1a 0%, #2c3e50 100%) !important;
        }

        .bg-success-gradient {
            background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%) !important;
            color: white;
            border: none;
        }

        .alert-success-gradient {
            background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
            border-color: #c3e6cb;
            color: #155724;
        }

        .bg-primary-soft {
            background-color: rgba(52, 152, 219, 0.2);
            color: #3498db;
        }

        .bg-light-gray {
            background-color: #f8f9fa;
        }

        .bg-soft-dark {
            background-color: #e9ecef;
        }

        .border-dark {
            border-color: #dee2e6 !important;
        }

        /* Card Styling */
        .card {
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        /* Form Styling */
        .form-floating label {
            color: #495057;
            font-weight: 500;
        }

        .form-control, .form-select {
            border-radius: 6px;
            padding: 12px 16px;
            transition: all 0.3s ease;
        }

            .form-control:focus, .form-select:focus {
                box-shadow: 0 0 0 4px rgba(52, 152, 219, 0.2);
                border-color: #3498db;
            }

        /* Button Styling */
        .btn {
            border-radius: 6px;
            padding: 10px 24px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-success-gradient:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(39, 174, 96, 0.3);
        }

        .badge {
            font-size: 0.8rem;
            font-weight: 500;
            padding: 5px 10px;
            border-radius: 20px;
        }
    </style>
}

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <partial name="_ValidationScriptsPartial" />
}