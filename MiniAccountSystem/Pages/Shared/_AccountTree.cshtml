@model List<MiniAccountSystem.Models.ChartOfAccount>

@{
    bool isReadOnlyUser = User.IsInRole("Viewer") || User.IsInRole("Accountant");
}
<style>
    .tree-container {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #bbb 0%, #ccc 100%);
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    }

    .parent-section {
        background: linear-gradient(135deg, #e6f0ff 0%, #ffffff 100%);
        border: 1px solid #d1d9e6;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        margin-bottom:8px;
    }

    .parent-header {
        background: #465b84;
        color: white;
        padding: 12px 20px;
        font-weight: 600;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid rgba(255,255,255,0.1);
    }

    .parent-header .badge {
        background-color: rgba(255,255,255,0.2);
        font-size: 0.75rem;
        padding: 5px 10px;
        border-radius: 12px;
        font-weight: 500;
    }

    .tree-view {
        padding:2px 15px 4px 15px;
        background-color: rgba(255,255,255,0.5);
    }

    .tree-item {
        position: relative;
        margin-bottom: 10px;
        padding: 12px 15px;
        background-color:#ddd ;
        border-radius: 6px;
        border-left: 4px solid #3a4669;
        transition: all 0.3s ease;
        box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    }

    .tree-item:hover {
            background-color: #ccc;
        transform: translateX(5px);
        box-shadow: 0 4px 8px rgba(59, 130, 246, 0.1);
    }

    .tree-item:before {
        content: "";
        position: absolute;
        left: -20px;
        top: 0;
        border-left: 2px dashed #cbd5e1;
        height: 100%;
    }

    .tree-item:after {
        content: "";
        position: absolute;
        left: -20px;
        top: 24px;
        border-top: 2px dashed #cbd5e1;
        width: 20px;
    }

    .account-name {
        font-weight: 600;
        color: #1e293b;
        display: flex;
        align-items: center;
    }

    .account-icon {
        margin-right: 10px;
        color: #3b82f6;
        font-size: 1.1rem;
    }

    .account-actions .btn {
        margin-left: 8px;
        font-size: 0.8rem;
        padding: 0.35rem 0.7rem;
        border-radius: 4px;
        transition: all 0.2s ease;
    }

    .account-type-badge {
        font-size: 0.7rem;
        padding: 0.25rem 0.6rem;
        border-radius: 12px;
        margin-left: 10px;
        font-weight: 500;
    }

    .badge-asset {
        background-color: #dbeafe;
        color: #1d4ed8;
    }

    .badge-liability {
        background-color: #fee2e2;
        color: #b91c1c;
    }

    .badge-equity {
        background-color: #ecfccb;
        color: #4d7c0f;
    }

    .badge-income {
        background-color: #dcfce7;
        color: #15803d;
    }

    .badge-expense {
        background-color: #ffedd5;
        color: #9a3412;
    }

    .no-accounts {
        text-align: center;
        padding: 30px;
        color: #64748b;
        font-style: italic;
    }

    .child-items {
        margin-left: 30px;
        margin-top: 10px;
        border-left: 2px solid #e2e8f0;
        padding-left: 15px;
    }

    /* For parent-section account ID */
    .parent-section .account-id {
        color: #465379;
        font-size: 0.75rem; 
        font-weight: 400;
        margin-left: 8px;
        background-color: #dbeafe;
        padding: 2px 6px;
        border-radius: 4px;
    }

  
    .tree-item .account-id {
        color: #fff;
        font-size: 0.75rem; 
        font-weight: 500; 
        margin-left: 8px;
        background-color: #6a7aa9;
        padding: 2px 8px;
        border-radius: 4px;
    }

   
  
 </style>


<ul class="tree-view">
    @if (!Model.Any())
    {
        <li class="no-accounts">
            <i class="bi bi-folder-x" style="font-size: 2rem; margin-bottom: 10px;"></i>
            <p>No accounts found</p>
        </li>
    }
    else
    {
        @foreach (var account in Model)
        {
            var hasChildren = account.Children != null && account.Children.Any();
            var accountType = GetAccountTypeBadge(account.Name);

            if (hasChildren)
            {
                <li class="parent-section">
                    <div class="parent-header">
                        <div>
                            <i class="bi bi-folder-fill account-icon"></i>
                            <span>@account.Name</span>
                            <span class="account-id">#@account.Id</span>
                        </div>
                        <span class="badge">Parent Account</span>
                    </div>
                    <div class="tree-view">
                        @await Html.PartialAsync("_AccountTree", account.Children)
                    </div>
                </li>
            }
            else
            {
                <li class="tree-item">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="account-name">
                            <i class="bi bi-journal-bookmark account-icon"></i>
                            <span>@account.Name</span>
                            <span class="account-id">#@account.Id</span>
                            <span class="account-type-badge badge-@accountType.ToLower()">@accountType</span>
                        </div>
                        <div class="account-actions">
                            @if (!isReadOnlyUser)
                            {
                                <a asp-page="Edit" asp-route-id="@account.Id" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-pencil-square"></i> Edit
                                </a>
                                <form method="post" asp-page="List" asp-page-handler="Delete" asp-route-id="@account.Id"
                                      onsubmit="return confirm('Are you sure you want to delete this account?');" style="display:inline;">
                                    <button type="submit" class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-trash"></i> Remove
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                    @if (account.Children != null && account.Children.Any())
                    {
                        <div class="child-items">
                            @await Html.PartialAsync("_AccountTree", account.Children)
                        </div>
                    }
                </li>
            }
        }
    }
</ul>

@functions {
    public string GetAccountTypeBadge(string accountName)
    {
        var name = accountName?.ToLower() ?? "";
        
        if (name.Contains("asset")) return "Asset";
        if (name.Contains("liability")) return "Liability";
        if (name.Contains("equity")) return "Equity";
        if (name.Contains("income")) return "Income";
        if (name.Contains("expense")) return "Expense";
        if (name.Contains("revenue")) return "Income";
        if (name.Contains("payable")) return "Liability";
        if (name.Contains("receivable")) return "Asset";
        
        return "Account";
    }
}