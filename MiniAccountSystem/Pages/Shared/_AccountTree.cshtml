@* @model List<MiniAccountSystem.Models.ChartOfAccount> *@

@* <ul class="tree"> *@
@*     @foreach (var account in Model) *@
@*     { *@
@*         <li> *@
@*             <div class="tree-item"> *@
@*                 <i class="bi bi-folder"></i> *@
@*                 <span class="account-name">@account.Name (ID: @account.Id)</span> *@
@*                 <span class="tree-actions"> *@
@*                     <a asp-page="Edit" asp-route-id="@account.Id" class="btn btn-xs btn-outline-primary"> *@
@*                         <i class="bi bi-pencil-square"></i> Edit *@
@*                     </a> *@
@*                     <form method="post" asp-page="List" asp-page-handler="Delete" asp-route-id="@account.Id" *@
@*                           onsubmit="return confirm('Are you sure you want to delete this account?');" style="display:inline;"> *@
@*                         <button type="submit" class="btn btn-xs btn-outline-danger"> *@
@*                             <i class="bi bi-trash"></i>Delete *@
@*                         </button> *@
@*                     </form> *@
@*                 </span> *@
@*             </div> *@
@*             @if (account.Children != null && account.Children.Any()) *@
@*             { *@
@*                 @await Html.PartialAsync("_AccountTree", account.Children) *@
@*             } *@
@*         </li> *@
@*     } *@
@* </ul> *@


@model List<MiniAccountSystem.Models.ChartOfAccount>

<style>
    .tree-container {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f2f7fe;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .parent-section {
        background-color: #cbe6ff;
        margin-bottom: 25px;
        border: 1px solid #bdbdbd;
        border-radius: 6px;
        overflow: hidden;
    }

    .parent-header {
        background-color: #2563eb;
        color: white;
        padding: 12px 15px;
        font-weight: 600;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .parent-header .badge {
            background-color: rgba(255,255,255,0.2);
            font-size: 0.8rem;
        }

    .tree-view {
        padding: 10px;
        background-color: #f9fbff;
    }

    .tree-item {
        position: relative;
        margin-bottom: 8px;
        padding: 10px;
        background-color: #f0f0f0;
        border-radius: 4px;
        border-left: 3px solid #ddd;
        transition: all 0.2s ease;
    }

        .tree-item:hover {
            background-color: #f0f7ff;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .tree-item:before {
            content: "";
            position: absolute;
            left: -15px;
            top: 0;
            border-left: 1px dashed #ccc;
            height: 100%;
        }

        .tree-item:after {
            content: "";
            position: absolute;
            left: -15px;
            top: 20px;
            border-top: 1px dashed #ccc;
            width: 15px;
        }

    .account-name {
        font-weight: 600;
        color: #2e3a4d;
    }

    .account-actions .btn {
        margin-left: 5px;
        font-size: 0.8rem;
        padding: 0.25rem 0.5rem;
    }

    .account-type-badge {
        font-size: 0.7rem;
        padding: 0.2rem 0.5rem;
        border-radius: 10px;
        margin-left: 10px;
        background-color: #e9ecef;
        color: #495057;
    }

    .no-accounts {
        text-align: center;
        padding: 30px;
        color: #6c757d;
    }

    .child-items {
        margin-left: 25px;
        margin-top: 8px;
    }
</style>

<ul class="tree-view">
    @foreach (var account in Model)
    {
        var hasChildren = account.Children != null && account.Children.Any();

        if (hasChildren)
        {
            <li class="parent-section">
                <div class="parent-header">
                    <span>@account.Name</span>
                    <span class="badge">Parent Account</span>
                </div>
                <div class="tree-view">
                    @await Html.PartialAsync("_AccountTree", account.Children)
                </div>
            </li>
        }
        else
        {
            <li class="tree-item">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <span class="account-name">@account.Name</span>
                        <span class="account-type-badge">@GetAccountTypeBadge(account.Name)</span>
                    </div>
                    <div class="account-actions">
                        <a asp-page="Edit" asp-route-id="@account.Id" class="btn btn-sm btn-outline-primary">
                            <i class="bi bi-pencil-square"></i> Edit
                        </a>
                        <form method="post" asp-page="List" asp-page-handler="Delete" asp-route-id="@account.Id"
                              onsubmit="return confirm('Are you sure you want to delete this account?');" style="display:inline;">
                            <button type="submit" class="btn btn-sm btn-outline-danger">
                                <i class="bi bi-trash"></i> Remove
                            </button>
                        </form>
                    </div>
                </div>
                @if (account.Children != null && account.Children.Any())
                {
                    <div class="child-items">
                        @await Html.PartialAsync("_AccountTree", account.Children)
                    </div>
                }
            </li>
        }
    }
</ul>

@functions {
    public string GetAccountTypeBadge(string accountType)
    {
        switch (accountType?.ToLower())
        {
            case "asset":
                return "Asset";
            case "liability":
                return "Liability";
            case "equity":
                return "Equity";
            case "income":
                return "Income";
            case "expense":
                return "Expense";
            default:
                return "Account";
        }
    }
}